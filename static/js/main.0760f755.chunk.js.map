{"version":3,"sources":["actions/types.js","reducers/stringsReducer.js","reducers/filterReducer.js","reducers/index.js","components/navigation-bar/index.js","components/navigation-bar/navigation-bar.js","components/add-button/index.js","components/add-button/add-button.js","actions/index.js","utils/index.js","components/search-input/index.js","components/search-input/search-input.js","hooks/useFilteredStrings.js","components/table/index.js","components/table/table.js","components/app/index.js","components/app/app.js","index.js"],"names":["ADD_STRING","SET_FILTER","initState","stringsReducer","state","action","type","payload","filterReducer","rootReducer","combineReducers","strings","filter","NavigationBar","children","className","Classes","DARK","align","Alignment","LEFT","AddButton","dispatch","useDispatch","onClick","string","Math","random","toString","substring","icon","minimal","SearchInput","useSelector","placeholder","dir","onChange","e","setFilter","target","value","useFilteredStrings","search","length","toLowerCase","indexOf","searchStrings","Table","numRows","name","cellRenderer","rowIndex","App","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"2KAAaA,EAAa,aACbC,EAAa,aCApBC,EAAY,CAAC,OAAQ,MAAO,QAAS,SAW5BC,EATQ,WAAgC,IAA/BC,EAA8B,uDAAtBF,EAAWG,EAAW,uCACpD,OAAQA,EAAOC,OACRN,EACG,GAAN,mBAAWI,GAAX,CAAkBC,EAAOE,UAElBH,GCGEI,EATO,WAAyB,IAAxBJ,EAAuB,uDAAf,GAAIC,EAAW,uCAC5C,OAAQA,EAAOC,OACRL,EACII,EAAOE,QAEPH,GCEEK,EALKC,YAAgB,CAClCC,QAASR,EACTS,OAAQJ,I,gCCJKK,ECCO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACE,cAAC,IAAD,CAAQC,UAAWC,IAAQC,KAA3B,SACE,cAAC,IAAD,CAAaC,MAAOC,IAAUC,KAA9B,SAAqCN,OCL5BO,ECKG,WAChB,IAAMC,EAAWC,cAKjB,OAAO,cAAC,IAAD,CAAQC,QAJC,WCNO,IAACC,EDOtBH,GCPsBG,GCDvBC,KAAKC,SAAW,GAAGC,SAAS,IAAIC,UAAU,GDEpC,CACLvB,KAAMN,EACNO,QAASkB,MDOsBK,KAAK,MAAMC,SAAO,KGVtCC,ECEK,WAClB,IAAMpB,EAASqB,aAAY,SAAC7B,GAAD,OAAWA,EAAMQ,UACtCU,EAAWC,cAMjB,OACE,sBAAKR,UAAU,kBAAf,UACE,sBAAMA,UAAU,6BAChB,uBACEA,UAAU,YACVT,KAAK,SACL4B,YAAY,eACZC,IAAI,OACJC,SAZW,SAACC,GAChBf,EHAqB,SAACV,GACxB,MAAO,CACLN,KAAML,EACNM,QAASK,GGHA0B,CAAUD,EAAEE,OAAOC,SAYxBA,MAAO5B,Q,yBCbA6B,EALY,WACzB,MAA4BR,aAAY,SAAC7B,GAAD,OAAWA,KACnD,OHF2B,SAACO,EAAS+B,GACrC,OAAsB,IAAlBA,EAAOC,OACFhC,EAGFA,EAAQC,QAAO,SAACa,GACrB,OAAOA,EAAOmB,cAAcC,QAAQH,EAAOE,gBAAkB,KGJxDE,CADP,EAAQnC,QAAR,EAAiBC,SCFJmC,ECGD,WACZ,IAAMpC,EAAU8B,IAMhB,OAAuB,IAAnB9B,EAAQgC,OACH,yCAIP,cAAC,IAAD,CAAQK,QAASrC,EAAQgC,OAAzB,SACE,cAAC,IAAD,CAAQM,KAAK,SAASC,aAVF,SAACC,GAAD,OACtB,cAAC,IAAD,oBAAUxC,EAAQwC,GAAYxC,EAAQwC,GAAY,YCPvCC,ECOH,WACV,OACE,qCACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,IACA,cAAC,EAAD,OAEF,cAAC,EAAD,QCJAC,G,4BAAQC,YAAY7C,IAE1B8C,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.0760f755.chunk.js","sourcesContent":["export const ADD_STRING = \"ADD_STRING\";\r\nexport const SET_FILTER = \"SET_FILTER\";\r\n","import { ADD_STRING } from \"../actions/types\";\r\nconst initState = [\"test\", \"set\", \"index\", \"trial\"];\r\n\r\nconst stringsReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case ADD_STRING:\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default stringsReducer;\r\n","import { SET_FILTER } from \"../actions/types\";\r\n\r\nconst filterReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case SET_FILTER:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filterReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport stringsReducer from \"./stringsReducer\";\r\nimport filterReducer from \"./filterReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  strings: stringsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import NavigationBar from \"./navigation-bar\";\r\n\r\nexport default NavigationBar;\r\n","import React from \"react\";\r\nimport { Alignment, Classes, Navbar, NavbarGroup } from \"@blueprintjs/core\";\r\n\r\nconst NavigationBar = ({ children }) => {\r\n  return (\r\n    <Navbar className={Classes.DARK}>\r\n      <NavbarGroup align={Alignment.LEFT}>{children}</NavbarGroup>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import AddButton from \"./add-button\";\r\nexport default AddButton;\r\n","import React from \"react\";\r\nimport { Button } from \"@blueprintjs/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getRandomString } from \"../../utils\";\r\nimport { addString } from \"../../actions\";\r\n\r\nconst AddButton = () => {\r\n  const dispatch = useDispatch();\r\n  const onClick = () => {\r\n    dispatch(addString(getRandomString()));\r\n  };\r\n\r\n  return <Button onClick={onClick} icon=\"add\" minimal />;\r\n};\r\n\r\nexport default AddButton;\r\n","import { ADD_STRING, SET_FILTER } from \"./types\";\r\n\r\nexport const addString = (string) => {\r\n  return {\r\n    type: ADD_STRING,\r\n    payload: string,\r\n  };\r\n};\r\n\r\nexport const setFilter = (filter) => {\r\n  return {\r\n    type: SET_FILTER,\r\n    payload: filter,\r\n  };\r\n};\r\n","export const getRandomString = () =>\r\n  (Math.random() + 1).toString(36).substring(7);\r\n\r\nexport const searchStrings = (strings, search) => {\r\n  if (search.length === 0) {\r\n    return strings;\r\n  }\r\n\r\n  return strings.filter((string) => {\r\n    return string.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n  });\r\n};\r\n","import SearchInput from \"./search-input\";\r\n\r\nexport default SearchInput;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setFilter } from \"../../actions\";\r\n\r\nconst SearchInput = () => {\r\n  const filter = useSelector((state) => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = (e) => {\r\n    dispatch(setFilter(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"bp3-input-group\">\r\n      <span className=\"bp3-icon bp3-icon-search\"></span>\r\n      <input\r\n        className=\"bp3-input\"\r\n        type=\"search\"\r\n        placeholder=\"Search input\"\r\n        dir=\"auto\"\r\n        onChange={onChange}\r\n        value={filter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import { useSelector } from \"react-redux\";\r\nimport { searchStrings } from \"../utils\";\r\n\r\nconst useFilteredStrings = () => {\r\n  const { strings, filter } = useSelector((state) => state);\r\n  return searchStrings(strings, filter);\r\n};\r\n\r\nexport default useFilteredStrings;\r\n","import Table from \"./table\";\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport { Cell, Column, Table2 } from \"@blueprintjs/table\";\r\n\r\nimport useFilteredStrings from \"../../hooks/useFilteredStrings\";\r\n\r\nconst Table = () => {\r\n  const strings = useFilteredStrings();\r\n\r\n  const strCellRenderer = (rowIndex) => (\r\n    <Cell>{`${strings[rowIndex] ? strings[rowIndex] : \"\"}`}</Cell>\r\n  );\r\n\r\n  if (strings.length === 0) {\r\n    return <p>No found</p>;\r\n  }\r\n\r\n  return (\r\n    <Table2 numRows={strings.length}>\r\n      <Column name=\"String\" cellRenderer={strCellRenderer} />\r\n    </Table2>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import App from \"./app\";\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { NavbarDivider } from \"@blueprintjs/core\";\r\n\r\nimport NavigationBar from \"../navigation-bar\";\r\n\r\nimport AddButton from \"../add-button\";\r\nimport SearchInput from \"../search-input\";\r\nimport Table from \"../table\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <NavigationBar>\r\n        <SearchInput />\r\n        <NavbarDivider />\r\n        <AddButton />\r\n      </NavigationBar>\r\n      <Table />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nimport App from \"./components/app\";\n\nimport \"normalize.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport \"@blueprintjs/table/lib/css/table.css\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}